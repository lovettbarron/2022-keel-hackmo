model Staff {
    fields {
        name Text
        skill StaffNeed[]
    }

    operations {
        get getStaff(id)
        list listAllStaff()
        delete deleteStaff(id)
        create createStaff() with (name)
    }

    @permission(
        actions: [get, list, update, delete, create],
        expression: true
    )
}

model Room {
    fields {
        name Text
    }

    operations {
        get getRoom(id)
        list listAllRoom()
        delete deleteRoom(id)
        create createRoom() with (name)
    }

    @permission(
        actions: [get, list, update, delete, create],
        expression: true
    )
}

model Patient {
    fields {
        name Text
        age Number
        checkin Checkin[]
        room Room
    }

    operations {
        get getPatient(id)
        get getPatientByRoom(room.id)
        list listAllPatient()
        delete deletePatient(id)
        create createPatient() with (name, room.id, age)
    }

    @permission(
        actions: [get, list, update, delete, create],
        expression: true
    )
}

model Tag {
    // Physical device tag
    fields {
        name Text
        room Room
        device Text
    }

    operations {
        get getTag(id)
        list listAllTag()
        delete deleteTag(id)
        update updateTag(id) with (name?, room.id)
        create createTag() with (name, room.id, device)
    }

    @permission(
        actions: [get, list, update, delete, create],
        expression: true
    )
}

model Need {
    fields {
        name Text
        patients PatientNeed[]
        staff StaffNeed[]
    }

    operations {
        get getNeed(id)
        list listAllNeed()
        delete deleteNeed(id)
        create createNeed() with (name)
    }

    @permission(
        actions: [get, list, update, delete, create],
        expression: true
    )
}

model Checkin {
    fields {
        name Text
        staff Staff
        patient Patient
        device Tag
    }

    operations {
        get getCheckin(id)
        list listAllCheckin()
        delete deleteCheckin(id)
        create createCheckin() with (name, staff.id, patient.id, device.id)
    }

    functions {
        create deviceCheckin() with (name, staff.id, patient.id, device.id) {
            @permission(expression: true)
        }
    }

    @permission(
        actions: [get, list, update, delete, create],
        expression: true
    )
}

model PatientNeed {
    fields {
        patient Patient
        need Need
    }

    operations {
        create createPatientNeed() with (patientId, needId)
    }

    @permission(
        actions: [get, list, update, delete, create],
        expression: true
    )
}

model StaffNeed {
    fields {
        staff Staff
        need Need
    }

    operations {
        create createStaffNeed() with (needId, staffId)
    }

    @permission(
        actions: [get, list, update, delete, create],
        expression: true
    )
}

// API
api Web {
    @graphql

    models {
        Staff
        Room
        Patient
        Tag
        Need
        Checkin
        PatientNeed
        StaffNeed
        Identity
    }
}

api Console {
    @rpc

    models {
        Staff
        Room
        Patient
        Tag
        Need
        Checkin
        PatientNeed
        StaffNeed
        Identity
    }
}
